/*
 * This file is generated by jOOQ.
 */
package db.tables;


import db.Keys;
import db.Public;
import db.tables.records.InvoicepositionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invoicepositions extends TableImpl<InvoicepositionsRecord> {

    private static final long serialVersionUID = 1197883970;

    /**
     * The reference instance of <code>public.InvoicePositions</code>
     */
    public static final Invoicepositions INVOICEPOSITIONS = new Invoicepositions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoicepositionsRecord> getRecordType() {
        return InvoicepositionsRecord.class;
    }

    /**
     * The column <code>public.InvoicePositions.id</code>.
     */
    public final TableField<InvoicepositionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.InvoicePositions.price</code>.
     */
    public final TableField<InvoicepositionsRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.InvoicePositions.nomenclature_name</code>.
     */
    public final TableField<InvoicepositionsRecord, String> NOMENCLATURE_NAME = createField("nomenclature_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.InvoicePositions.count</code>.
     */
    public final TableField<InvoicepositionsRecord, Integer> COUNT = createField("count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.InvoicePositions</code> table reference
     */
    public Invoicepositions() {
        this(DSL.name("InvoicePositions"), null);
    }

    /**
     * Create an aliased <code>public.InvoicePositions</code> table reference
     */
    public Invoicepositions(String alias) {
        this(DSL.name(alias), INVOICEPOSITIONS);
    }

    /**
     * Create an aliased <code>public.InvoicePositions</code> table reference
     */
    public Invoicepositions(Name alias) {
        this(alias, INVOICEPOSITIONS);
    }

    private Invoicepositions(Name alias, Table<InvoicepositionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Invoicepositions(Name alias, Table<InvoicepositionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Invoicepositions(Table<O> child, ForeignKey<O, InvoicepositionsRecord> key) {
        super(child, key, INVOICEPOSITIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InvoicepositionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoicepositionsRecord, ?>>asList(Keys.INVOICEPOSITIONS__NOMENCL_FK);
    }

    public Nomenclature nomenclature() {
        return new Nomenclature(this, Keys.INVOICEPOSITIONS__NOMENCL_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invoicepositions as(String alias) {
        return new Invoicepositions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invoicepositions as(Name alias) {
        return new Invoicepositions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Invoicepositions rename(String name) {
        return new Invoicepositions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Invoicepositions rename(Name name) {
        return new Invoicepositions(name, null);
    }
}
