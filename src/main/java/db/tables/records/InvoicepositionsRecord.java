/*
 * This file is generated by jOOQ.
 */
package db.tables.records;


import db.tables.Invoicepositions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoicepositionsRecord extends TableRecordImpl<InvoicepositionsRecord> implements Record4<Integer, Long, String, Integer> {

    private static final long serialVersionUID = -954587610;

    /**
     * Setter for <code>public.InvoicePositions.id</code>.
     */
    public InvoicepositionsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.InvoicePositions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.InvoicePositions.price</code>.
     */
    public InvoicepositionsRecord setPrice(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.InvoicePositions.price</code>.
     */
    public Long getPrice() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.InvoicePositions.nomenclature_name</code>.
     */
    public InvoicepositionsRecord setNomenclatureName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.InvoicePositions.nomenclature_name</code>.
     */
    public String getNomenclatureName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.InvoicePositions.count</code>.
     */
    public InvoicepositionsRecord setCount(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.InvoicePositions.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Long, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Long, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Invoicepositions.INVOICEPOSITIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Invoicepositions.INVOICEPOSITIONS.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Invoicepositions.INVOICEPOSITIONS.NOMENCLATURE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Invoicepositions.INVOICEPOSITIONS.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNomenclatureName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNomenclatureName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoicepositionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoicepositionsRecord value2(Long value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoicepositionsRecord value3(String value) {
        setNomenclatureName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoicepositionsRecord value4(Integer value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvoicepositionsRecord values(Integer value1, Long value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoicepositionsRecord
     */
    public InvoicepositionsRecord() {
        super(Invoicepositions.INVOICEPOSITIONS);
    }

    /**
     * Create a detached, initialised InvoicepositionsRecord
     */
    public InvoicepositionsRecord(Integer id, Long price, String nomenclatureName, Integer count) {
        super(Invoicepositions.INVOICEPOSITIONS);

        set(0, id);
        set(1, price);
        set(2, nomenclatureName);
        set(3, count);
    }
}
